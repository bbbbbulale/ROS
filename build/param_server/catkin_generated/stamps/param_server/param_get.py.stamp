#! /usr/bin/env python
"""
    参数服务器操作之查询_Python实现:    
        get_param(键,默认值)
            当键存在时，返回对应的值，如果不存在返回默认值
        get_param_cached
        get_param_names
        has_param
        search_param
"""
import rospy

# 获取参数
def GetParam():
    # 1. rospy.get_param
    bool_value = rospy.get_param("nh_bool", default=0)
    if bool_value != 0:
        rospy.loginfo("get_param获取nh_bool成功：%s", bool_value)
    else:
        rospy.loginfo("get_param获取nh_bool失败！")

    # 2. rospy.get_param_cached
    double_value = rospy.get_param_cached("nh_double", default=0)

    try:
        int_value = rospy.get_param_cached("nh_int")
        rospy.loginfo("get_param_cached获取nh_int成功：%d", int_value)
    except KeyError:
        rospy.loginfo("get_param_cached获取nh_int失败！")
        try:
            int_value = rospy.get_param("nh_int")
            rospy.loginfo("但get_param获取nh_int成功：%d", int_value)
        except KeyError:
            rospy.loginfo("且get_param获取nh_int也失败！")

    # 3. get_param_names
    names = rospy.get_param_names()
    rospy.loginfo("get_param_names获取参数列表：")
    for name in names:
        rospy.loginfo("\t%s", name)

    # 4. has_param
    rospy.loginfo("存在参数nh_dict吗？ %s", rospy.has_param("nh_dict"))
    
    # 5. search_param
    name = rospy.search_param("nh_int")
    if name != None:
        rospy.loginfo("搜索到参数nh_int！完整的名字为: %s", name)
    else:
        rospy.loginfo("没有搜索到参数nh_int")
        
if __name__ == "__main__":
    rospy.init_node("param_get_node_")
    
    rospy.loginfo("-----正在获取参数-----")
    GetParam()
    rospy.loginfo("-----获取参数over-----\n")
    
    
